import database as db
import views as v
from telebot.types import ReplyKeyboardRemove
from datetime import datetime
from graf import build_smoking_stats

#–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
ASK_SMOKING = "ask_smoking"
ASK_SMOKING_TYPE = "ask_smoking_type"
ASK_CIGARETTES_AMOUNT = "ask_cigarettes_amount"
ASK_VAPE_AMOUNT = "ask_vape_amount"
ASK_MOTIVATION = "ask_motivation"
ASK_CIGARETTE_PRICE = "ask_cigarette_price"
ASK_VAPE_PRICE = "ask_vape_price"
user_states = {}

TRACK_SMOKED_TODAY = "track_smoked_today"
TRACK_TODAY_CIGARETTES = "track_today_cigarettes"
TRACK_TODAY_VAPE = "track_today_vape"

REMINDER_SET = "reminder_SET"

STATS_PERIOD = "stats_period"

def init(): #–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
    db.init_db()

def handle_start(message, bot): #–Ω–∞—á–∏–Ω–∞–µ–º –æ–ø—Ä–æ—Å –ø—Ä–æ—Ñ–∏–ª—è
    user_states[message.chat.id] = ASK_SMOKING
    return v.start_message(), v.smoking_keyboard(), None

def handle_profile(message): #–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è + –∏—Å—Ç–æ—Ä–∏—è —Ç—Ä–µ–∫–∏–Ω–≥–∞
    user = db.get_user(message.chat.id)
    history = db.get_daily_tracking(message.chat.id)
    return v.profile_message(user, history), None, None

def handle_fill_profile(message): # –ü–æ—à–∞–≥–æ–≤–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    state = user_states.get(message.chat.id)
    #–∫—É—Ä–∏—Ç –ª–∏
    if state == ASK_SMOKING:
        if message.text.lower() == "–¥–∞":
            db.save_user(message.chat.id, message.from_user.username, smoking_status=True)
            user_states[message.chat.id] = ASK_SMOKING_TYPE
            return v.ask_smoking_type(), v.ask_smoking_type_keyboard(), None
        elif message.text.lower() == "–Ω–µ—Ç":
            db.save_user(message.chat_id, smoking_status=False)
            user_states.pop(message.chat.id, None)
            return "–û—Ç–ª–∏—á–Ω–æ üöÄ –†–∞–¥, —á—Ç–æ —Ç–µ–±–µ –Ω–µ –Ω—É–∂–Ω–æ –±–æ—Ä–æ—Ç—å—Å—è —Å —ç—Ç–æ–π –ø—Ä–∏–≤—ã—á–∫–æ–π!", None, None
        else:
            return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ '–î–∞' –∏–ª–∏ '–ù–µ—Ç'.", None, None
    #—á—Ç–æ –∫—É—Ä–∏—Ç
    elif state == ASK_SMOKING_TYPE:
        if message.text.lower() in ["—Å–∏–≥–∞—Ä–µ—Ç—ã", "—ç–ª–µ–∫—Ç—Ä–æ–Ω–∫–∏", "—Å–∏–≥–∞—Ä–µ—Ç—ã –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∫–∏"]:
            db.update_user_field(message.chat.id, "smoking_type", message.text)
            if message.text == "—Å–∏–≥–∞—Ä–µ—Ç—ã":
                user_states[message.chat.id] = ASK_CIGARETTES_AMOUNT
                return v.ask_cigarettes_amount(), v.ask_cigarettes_keyboard(), None
            elif message.text == "—ç–ª–µ–∫—Ç—Ä–æ–Ω–∫–∏":
                user_states[message.chat.id] = ASK_VAPE_AMOUNT
                return v.ask_vape_amount(), v.ask_vape_keyboard(), None
            else: #–æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞
                user_states[message.chat.id] = ASK_CIGARETTES_AMOUNT
                return v.ask_cigarettes_amount(), v.ask_cigarettes_keyboard(), None
        else:
                return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.", None, None
    #–∫–æ–ª-–≤–æ —Å–∏–≥–∞—Ä–µ—Ç –≤ –¥–µ–Ω—å
    elif state == ASK_CIGARETTES_AMOUNT:
        db.update_user_field(message.chat.id, "cigarettes_amount", message.text)
        user_states[message.chat.id] = ASK_CIGARETTE_PRICE
        return "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –ø–∞—á–∫–∞ —Å–∏–≥–∞—Ä–µ—Ç, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –æ–±—ã—á–Ω–æ –ø–æ–∫—É–ø–∞–µ—à—å? (–≤ —Ä—É–±–ª—è—Ö)", ReplyKeyboardRemove(), None
    #—Ü–µ–Ω–∞ –ø–∞—á–∫–∏
    elif state == ASK_CIGARETTE_PRICE:
        try:
            price = float(message.text)
            db.update_user_field(message.chat.id, "cigarette_price", price)
        except ValueError:
            return "–í–≤–µ–¥–∏ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä 200.", None, None

        user = db.get_user(message.chat.id)
        smoking_type = user[3] or ""

        if "—ç–ª–µ–∫—Ç—Ä–æ–Ω–∫–∏" in smoking_type.lower():
            user_states[message.chat.id] = ASK_VAPE_AMOUNT
            return v.ask_vape_amount(), v.ask_vape_keyboard(), None
        else:
            user_states[message.chat.id] = ASK_MOTIVATION
            return v.ask_motivation(), ReplyKeyboardRemove(), None
    #–Ω–∞ —Å–∫–æ–ª—å–∫–æ —Ö–≤–∞—Ç–∞–µ—Ç —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π —Å–∏–≥–∞—Ä–µ—Ç—ã—Å
    elif state == ASK_VAPE_AMOUNT:
        db.update_user_field(message.chat.id, "vape_amount", message.text)
        user_states[message.chat.id] = ASK_VAPE_PRICE
        return "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è —Å–∏–≥–∞—Ä–µ—Ç–∞ (–≤ —Ä—É–±–ª—è—Ö)?", ReplyKeyboardRemove(), None
    #—Ü–µ–Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π —Å–∏–≥–∞—Ä–µ—Ç—ã
    elif state == ASK_VAPE_PRICE:
        try:
            price = float(message.text)
            db.update_user_field(message.chat.id, "vape_price", price)
        except ValueError:
            return "–í–≤–µ–¥–∏ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä 1200.", None, None
        user_states[message.chat.id] = ASK_MOTIVATION
        return v.ask_motivation(), ReplyKeyboardRemove(), None
    #–º–æ—Ç–∏–≤–∞—Ü–∏—è
    elif state == ASK_MOTIVATION:
        db.update_user_field(message.chat.id, "motivation", message.text)
        user_states.pop(message.chat.id, None)
        return v.saved_message(), None, None

    else:
        return "–ù–∞–ø–∏—à–∏ /start, —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å –∑–∞–Ω–æ–≤–æ.", None, None

#–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Ç—Ä–µ–∫–∏–Ω–≥
def start_daily_tracking(message):
    user = db.get_user(message.chat.id)
    if not user:
        return "–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏ –æ–ø—Ä–æ—Å —Å /start", None, None

    user_states[message.chat.id] = TRACK_SMOKED_TODAY
    return v.ask_smoked_today(), v.ask_smoked_today_keyboard(), None

#–æ–±—Ä–∞–±–æ—Ç–∫–∞
def handle_daily_tracking(message):

    state = user_states.get(message.chat.id)
    today = datetime.today().strftime("%d-%m-%Y")
    user = db.get_user(message.chat.id)
    smoking_type = user[3].lower()
    current_streak = user[10] or 0
    max_streak = user[11] or 0
    last_smoke_date = user[9]
#–∫—É—Ä–∏–ª –ª–∏ —Å–µ–≥–æ–¥–Ω—è
    if state == TRACK_SMOKED_TODAY:
        if message.text.lower() == "–¥–∞":
            #—Å–±—Ä–æ—Å —Å—Ç—Ä–∏–∫–∞
            db.update_user_field(message.chat.id, "current_streak", 0)
            db.update_user_field(message.chat.id, "last_smoke_date", today)
            if "—Å–∏–≥–∞—Ä–µ—Ç—ã" in smoking_type:
                user_states[message.chat.id] = TRACK_TODAY_CIGARETTES
                return v.ask_today_cigarettes(), ReplyKeyboardRemove(), None
            elif "—ç–ª–µ–∫—Ç—Ä–æ–Ω–∫–∏" in smoking_type:
                user_states[message.chat.id] = TRACK_TODAY_VAPE
                return v.ask_today_vape(), ReplyKeyboardRemove(), None
            elif "—Å–∏–≥–∞—Ä–µ—Ç—ã –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∫–∏" in smoking_type:
                user_states[message.chat.id] = TRACK_TODAY_CIGARETTES
                return v.ask_today_cigarettes(), ReplyKeyboardRemove(), None
            return None

        elif message.text.lower() == "–Ω–µ—Ç":
            # –Ω–µ –∫—É—Ä–∏–ª > –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∏–∫
            if last_smoke_date:
                last_smoke = datetime.strptime(last_smoke_date, "%d-%m-%Y")
                if (datetime.today() - last_smoke).days > 1:
                    current_streak = 1
                else:
                    current_streak += 1
            else:
                current_streak = 1
            max_streak = max(max_streak, current_streak)
            #—Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç—Ä–∏–∫ –∏ –∑–∞–ø–∏—Å—å –≤ –±–¥
            db.update_user_field(message.chat.id, "current_streak", current_streak)
            db.update_user_field(message.chat.id, "max_streak", max_streak)
            db.save_daily_tracking(message.chat.id, today, cigarettes=0, vape_puffs=0)
            user_states.pop(message.chat.id, None)
            return v.praise_for_no_smoke()+f"\nüî• –¢–≤–æ–π —Ç–µ–∫—É—â–∏–π —Å—Ç—Ä–∏–∫: {current_streak} –¥–Ω–µ–π\nüèÜ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Å—Ç—Ä–∏–∫: {max_streak} –¥–Ω–µ–π", ReplyKeyboardRemove(), None
        else:
            return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É '–î–∞' –∏–ª–∏ '–ù–µ—Ç'.", v.ask_smoked_today_keyboard(), None
    # –∫–æ–ª-–≤–æ —Å–∏–≥–∞—Ä–µ—Ç –∑–∞ —Å–µ–≥–æ–¥–Ω—è
    elif state == TRACK_TODAY_CIGARETTES:
        try:
            cigarettes = int(message.text)
            if cigarettes < 0:
                raise ValueError
        except ValueError:
            return "–í–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ —Å–∏–≥–∞—Ä–µ—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä 5.", None, None

        if "—ç–ª–µ–∫—Ç—Ä–æ–Ω–∫–∏" in smoking_type:
            user_states[message.chat.id] = TRACK_TODAY_VAPE
            user_states["cigarettes_temp"] = cigarettes
            return v.ask_today_vape(), None, None
        else:
            db.save_daily_tracking(message.chat.id, today, cigarettes=cigarettes)
            user_states.pop(message.chat.id, None)
            return v.encouragement_message_after_smoke(), None, None
    # –∫–æ–ª-–≤–æ —Ç—è–∂–µ–∫ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
    elif state == TRACK_TODAY_VAPE:
        try:
            vape_puffs = int(message.text)
            if vape_puffs < 0:
                raise ValueError
        except ValueError:
            return "–í–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –∑–∞—Ç—è–∂–µ–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä 50.", None, None

        if "cigarettes_temp" in user_states:
            cigarettes = user_states.pop("cigarettes_temp")
        else:
            cigarettes = 0

        db.save_daily_tracking(message.chat.id, today, cigarettes=cigarettes, vape_puffs=vape_puffs)
        user_states.pop(message.chat.id, None)
        return v.encouragement_message_after_smoke(), None, None

    else:
        return "–ù–∞–ø–∏—à–∏ /track, —á—Ç–æ–±—ã –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞ —Å–µ–≥–æ–¥–Ω—è.", None, None

#—Å–ø—Ä–∞—à–∏–≤–∞–µ–º –≤—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
def handle_reminder_command(message):
    user_states[message.chat.id] = REMINDER_SET
    return v.ask_reminder_time(), None, None

#–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è. –§–æ—Ä–º–∞—Ç: –ß–ß:–ú–ú
def handle_reminder_time(message):
    try:
        time_text = message.text.strip()
        hour, minute = map(int, time_text.split(":"))
        if not (0 <= hour < 24 and 0 <= minute < 60):
            raise ValueError
    except ValueError:
        return v.invalid_reminder_time(), None, None

    db.update_user_field(message.chat.id, "reminder_time", time_text)
    user_states.pop(message.chat.id, None)
    return v.saved_reminder_time(time_text), None, None

#–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö user_id
def get_all_users():
    users = db.get_all_users()
    return [user[0] for user in users]


def calculate_money_saved(user_id):
    """
  –ü–æ–¥—Å—á—ë—Ç —Å—ç–∫–æ–Ω–æ–º–ª–µ–Ω–Ω—ã—Ö –¥–µ–Ω–µ–≥ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø—Ä–∏–≤—ã—á–Ω—ã–º —É—Ä–æ–≤–Ω–µ–º –∫—É—Ä–µ–Ω–∏—è.
    - –î–ª—è —Å–∏–≥–∞—Ä–µ—Ç –±–µ—Ä—ë–º —Ü–µ–Ω—É –ø–∞—á–∫–∏ / 20 (1 —Å–∏–≥–∞—Ä–µ—Ç–∞).
    - –î–ª—è –≤–µ–π–ø–∞ –±–µ—Ä—ë–º —Ü–µ–Ω—É / 10000 (—É—Å–ª–æ–≤–Ω–æ –Ω–∞ 10–∫ —Ç—è–≥).
    - –ë–µ—Ä—ë–º –∏—Å—Ç–æ—Ä–∏—é –∫—É—Ä–µ–Ω–∏—è –∏–∑ –ë–î.
    - –°—á–∏—Ç–∞–µ–º, —Å–∫–æ–ª—å–∫–æ –ø–æ—Ç—Ä–∞—Ç–∏–ª –±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ –ø—Ä–∏–≤—ã—á–∫–µ,
      –∏ —Å–∫–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω–æ –ø–æ—Ç—Ä–∞—Ç–∏–ª ‚Üí —Ä–∞–∑–Ω–∏—Ü–∞ = —Å—ç–∫–æ–Ω–æ–º–∏–ª.
      """
    user = db.get_user(user_id)
    if not user:
        return 0

    cigarettes_amount = user[4] # —Å—Ä–µ–¥–Ω–µ–µ –∫–æ–ª-–≤–æ —Å–∏–≥–∞—Ä–µ—Ç –≤ –ø—Ä–æ—Ñ–∏–ª–µ
    cigarette_price = user[12] if len(user) > 12 else 0
    vape_amount = user[5]
    vape_price = user[13] if len(user) > 13 else 0

    # —Ü–µ–Ω–∞ –∑–∞ 1 —Å–∏–≥–∞—Ä–µ—Ç—É
    price_per_cig = cigarette_price / 20 if cigarette_price else 0
    # —Ü–µ–Ω–∞ –∑–∞ 1 –∑–∞—Ç—è–∂–∫—É (–µ—Å–ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–∞ 10 000 —Ç—è–≥)
    price_per_puff = vape_price / 10000 if vape_price else 0

    records = db.get_daily_tracking(user_id)
    spent = 0
    would_spend = 0

    try:
        # —Å–∏–≥–∞—Ä–µ—Ç—ã (–±–µ—Ä—ë–º –≤–µ—Ä—Ö–Ω—é—é –≥—Ä–∞–Ω–∏—Ü—É –¥–∏–∞–ø–∞–∑–æ–Ω–∞)
        if cigarettes_amount:
            avg_cigs = int(cigarettes_amount.split("‚Äì")[1]) if "‚Äì" in cigarettes_amount else int(cigarettes_amount)
        else:
            avg_cigs = 0
    except:
        avg_cigs = 0

    # –≤–µ–π–ø ‚Äî –ø–µ—Ä–µ–≤–µ–¥—ë–º "1‚Äì2 –Ω–µ–¥–µ–ª–∏" –≤ –ø—Ä–∏–º–µ—Ä–Ω–æ–µ —á–∏—Å–ª–æ —Ç—è–≥ –≤ –¥–µ–Ω—å
    vape_daily = 0
    if vape_amount == "–ú–µ–Ω—å—à–µ –Ω–µ–¥–µ–ª–∏":
        vape_daily = 2000
    elif vape_amount == "1‚Äì2 –Ω–µ–¥–µ–ª–∏":
        vape_daily = 1000
    elif vape_amount == "2‚Äì4 –Ω–µ–¥–µ–ª–∏":
        vape_daily = 500
    elif vape_amount == "–ë–æ–ª—å—à–µ –º–µ—Å—è—Ü–∞":
        vape_daily = 300

    for _, cig, vape in records:
        spent += cig * price_per_cig + vape * price_per_puff
        would_spend += avg_cigs * price_per_cig + vape_daily * price_per_puff

    return round(would_spend - spent, 2)
#–≤—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
def handle_stats_command(message):
    user_states[message.chat.id] = "stats_period"
    return "–í—ã–±–µ—Ä–∏ –ø–µ—Ä–∏–æ–¥ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", v.stats_period_keyboard(), None
#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
def handle_stats_period(message):
    period = message.text
    history = db.get_daily_tracking(message.chat.id)

    if not history:
        return None, "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.", None

    if period == "üìÖ –ù–µ–¥–µ–ª—è":
        data = history[-7:]
        caption = "üìä –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é"
    elif period == "üìÖ 2 –Ω–µ–¥–µ–ª–∏":
        data = history[-14:]
        caption = "üìä –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –Ω–µ–¥–µ–ª–∏"
    elif period == "üìÖ –ú–µ—Å—è—Ü":
        data = history[-30:]
        caption = "üìä –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü"
    else:
        return None, "–í—ã–±–µ—Ä–∏ –ø–µ—Ä–∏–æ–¥ —Å –∫–Ω–æ–ø–æ–∫.", None

    buf = build_smoking_stats(data)
    return caption, None, buf






