from telebot.types import ReplyKeyboardMarkup, KeyboardButton
import controller as c
def start_message():
    return "–ü—Ä–∏–≤–µ—Ç! üö≠ –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –±—Ä–æ—Å–∏—Ç—å –∫—É—Ä–∏—Ç—å.\n\n–¢—ã —Å–µ–π—á–∞—Å –∫—É—Ä–∏—à—å?"

def smoking_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("–î–∞"), KeyboardButton("–ù–µ—Ç"))
    return markup

def ask_smoking_type():
    return '–ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç—ã –∫—É—Ä–∏—à—å?'
def ask_smoking_type_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(
        KeyboardButton("—Å–∏–≥–∞—Ä–µ—Ç—ã"),
        KeyboardButton("—ç–ª–µ–∫—Ç—Ä–æ–Ω–∫–∏"),
        KeyboardButton("—Å–∏–≥–∞—Ä–µ—Ç—ã –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∫–∏")
    )
    return markup

def ask_cigarettes_amount():
    return '–°–∫–æ–ª—å–∫–æ —Å–∏–≥–∞—Ä–µ—Ç —Ç—ã –∫—É—Ä–∏—à—å –≤ –¥–µ–Ω—å?'

def ask_cigarettes_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(
        KeyboardButton("1‚Äì5"),
        KeyboardButton("6‚Äì10"),
        KeyboardButton("11‚Äì20"),
        KeyboardButton("–ë–æ–ª—å—à–µ 20")
    )
    return markup

def ask_vape_amount():
    return '–ù–∞ —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π —Ç–µ–±–µ —Ö–≤–∞—Ç–∞–µ—Ç —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π —Å–∏–≥–∞—Ä–µ—Ç—ã (10 000 —Ç—è–≥)?'

def ask_vape_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(
        KeyboardButton("–ú–µ–Ω—å—à–µ –Ω–µ–¥–µ–ª–∏"),
        KeyboardButton("1‚Äì2 –Ω–µ–¥–µ–ª–∏"),
        KeyboardButton("2‚Äì4 –Ω–µ–¥–µ–ª–∏"),
        KeyboardButton("–ë–æ–ª—å—à–µ –º–µ—Å—è—Ü–∞")
    )
    return markup

def ask_motivation():
    return "–ü–æ—á–µ–º—É —Ç—ã —Ö–æ—á–µ—à—å –±—Ä–æ—Å–∏—Ç—å –∫—É—Ä–∏—Ç—å?"

def ask_goal():
    return "–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫–∞—è —Ç–≤–æ—è –≥–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å?"

def saved_message():
    return (
        "–°—É–ø–µ—Ä! –Ø —Å–æ—Ö—Ä–∞–Ω–∏–ª —Ç–≤–æ—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é ‚úÖ\n"
        "–ë—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ —ç—Ç–∏–º –≤–º–µ—Å—Ç–µ üí™\n"
        "–í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /profile, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"
    )
def profile_message(user, history):
    if user:
        _, username, smoking_status, smoking_type, cigarettes_amount, vape_amount, motivation, goal, reminder_time, last_smoke_date, current_streak, max_streak, cigarette_price, vape_price = user
        profile_text = (
            f"üìã –¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:\n\n"
            f"üë§ Username: {username}\n"
            f"üå´Ô∏è –ß—Ç–æ –∫—É—Ä–∏—à—å: {smoking_type}\n"
            f"üö¨ –°–∏–≥–∞—Ä–µ—Ç—ã –≤ –¥–µ–Ω—å: {cigarettes_amount or '‚Äî'}\n"
            f"üí® –≠–ª–µ–∫—Ç—Ä–æ–Ω–∫–∏: {vape_amount or '‚Äî'}\n"
            f"üí° –ú–æ—Ç–∏–≤–∞—Ü–∏—è: {motivation}\n"
            f"‚è∞Ô∏è –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: {reminder_time}\n"
            f"üî• –¢–µ–∫—É—â–∏–π —Å—Ç—Ä–∏–∫: {current_streak} –¥–Ω–µ–π\n"
            f"üèÜ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Å—Ç—Ä–∏–∫: {max_streak} –¥–Ω–µ–π\n"

        )
        saved_money = c.calculate_money_saved(user[0])
        profile_text += f"üíµ –°—ç–∫–æ–Ω–æ–º–ª–µ–Ω–æ: {saved_money} —Ä—É–±.\n"

        if history:
            profile_text += f"\nüóì –ò—Å—Ç–æ—Ä–∏—è –∫—É—Ä–µ–Ω–∏—è:\n"
            for record in history:
                print(history)
                date, cig, vape = record
                profile_text += f"{date}: üö¨ {cig} | üí® {vape}\n"
        else:
            profile_text += "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∫—É—Ä–µ–Ω–∏–∏ –∑–∞ –¥–Ω–∏."

    else:
        return "–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. –ù–∞–ø–∏—à–∏ /start."
    return profile_text

def help_message():
    help_text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –±—Ä–æ—Å–∞–Ω–∏—è –∏–ª–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫—É—Ä–µ–Ω–∏—è.\n\n"
        "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n"
        "‚ñ´Ô∏è /start ‚Äî –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "‚ñ´Ô∏è /profile ‚Äî –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å (–∫—É—Ä–∏—à—å –ª–∏ —Ç—ã, —Å–∫–æ–ª—å–∫–æ –∏ —Ç.–ø.)\n"
        "‚ñ´Ô∏è /track ‚Äî –≤–Ω–µ—Å—Ç–∏ –∑–∞–ø–∏—Å—å –æ –∫—É—Ä–µ–Ω–∏–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è\n"
        "‚ñ´Ô∏è /stats ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É (–Ω–µ–¥–µ–ª—è, 2 –Ω–µ–¥–µ–ª–∏, –º–µ—Å—è—Ü)\n"
        "‚ñ´Ô∏è /reminder ‚Äî –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ '–∫—É—Ä–∏–ª –ª–∏ —Ç—ã —Å–µ–≥–æ–¥–Ω—è?'\n\n"
        "üí° –î–∞–∂–µ –µ—Å–ª–∏ —Ç—ã –Ω–µ –∫—É—Ä–∏—à—å, –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ–Ω—è —Ä–∞–¥–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞ üöÄ"
    )
    return help_text
def ask_smoked_today():
    return "–¢—ã –∫—É—Ä–∏–ª —Å–µ–≥–æ–¥–Ω—è?"

def ask_smoked_today_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(KeyboardButton("–î–∞"), KeyboardButton("–ù–µ—Ç"))
    return markup

def ask_today_cigarettes():
    return "–°–∫–æ–ª—å–∫–æ —Å–∏–≥–∞—Ä–µ—Ç —Ç—ã —Å–µ–≥–æ–¥–Ω—è –∫—É—Ä–∏–ª? –í–≤–µ–¥–∏ —á–∏—Å–ª–æ."

def ask_today_vape():
    return "–°–∫–æ–ª—å–∫–æ –∑–∞—Ç—è–∂–µ–∫ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π —Å–∏–≥–∞—Ä–µ—Ç—ã —Ç—ã —Å–¥–µ–ª–∞–ª —Å–µ–≥–æ–¥–Ω—è? –í–≤–µ–¥–∏ —á–∏—Å–ª–æ."

def praise_for_no_smoke():
    return "–û—Ç–ª–∏—á–Ω–æ! –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! –°–µ–≥–æ–¥–Ω—è —Ç—ã –Ω–µ –∫—É—Ä–∏–ª ‚úÖ"

def ask_reminder_time():
    return "–í–æ —Å–∫–æ–ª—å–∫–æ –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å —Ç–µ–±–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å? ‚è∞\n–ù–∞–ø–∏—à–∏ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM (–Ω–∞–ø—Ä–∏–º–µ—Ä 19:30)."

def invalid_reminder_time():
    return "‚ùå –í–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM (–Ω–∞–ø—Ä–∏–º–µ—Ä 18:45)."

def saved_reminder_time(time_text):
    return f"‚úÖ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ {time_text}."

def encouragement_message_after_smoke():
    return (
        "–î–∞–Ω–Ω—ã–µ –∑–∞ —Å–µ–≥–æ–¥–Ω—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã ‚úÖ\n"
        "–í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–ª—É—á–∏—Ç—Å—è!.üö≠"
    )

def stats_period_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(
        KeyboardButton("üìÖ –ù–µ–¥–µ–ª—è"),
        KeyboardButton("üìÖ 2 –Ω–µ–¥–µ–ª–∏"),
        KeyboardButton("üìÖ –ú–µ—Å—è—Ü")
    )
    return markup
